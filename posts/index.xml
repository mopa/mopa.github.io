<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Todo Artículos - Pablo M.</title>
        <link>/posts/</link>
        <description>Todo Artículos | Pablo M.</description>
        <generator>Hugo -- gohugo.io</generator><language>es</language><copyright>Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Tue, 07 Jun 2022 00:00:00 &#43;0000</lastBuildDate><atom:link href="/posts/" rel="self" type="application/rss+xml" /><item>
    <title>[PySpark] CheatSheet o Chuleta</title>
    <link>/2022/06/pyspark-cheatsheet-o-chuleta/</link>
    <pubDate>Tue, 07 Jun 2022 00:00:00 &#43;0000</pubDate>
    <author>Autor</author>
    <guid>/2022/06/pyspark-cheatsheet-o-chuleta/</guid>
    <description><![CDATA[Como bien indica el título de este post es para dejar por aquí una chuleta para PySpark.
Principales comandos Acción Comando Importar SparkSession from pyspark.sql import SparkSession Crear SparkSession spark = SparkSession.builder.appName(&quot;MiAplicacion&quot;).getOrCreate() Crear RDD a partir de una lista rdd = spark.sparkContext.parallelize([1, 2, 3, 4, 5]) Crear DataFrame a partir de un archivo CSV df = spark.read.csv(&quot;archivo.csv&quot;, header=True, inferSchema=True) Ver los primeros n elementos de un RDD o DataFrame rdd.take(5) / df.]]></description>
</item><item>
    <title>[Linux] Búsquedas por la terminal</title>
    <link>/2022/01/linux-b%C3%BAsquedas-por-la-terminal/</link>
    <pubDate>Tue, 18 Jan 2022 00:00:00 &#43;0000</pubDate>
    <author>Autor</author>
    <guid>/2022/01/linux-b%C3%BAsquedas-por-la-terminal/</guid>
    <description><![CDATA[Tarde o temprano vamos a tener la necesidad de buscar algo en la terminal, ya sean archivos, directorios, ejecutables, etc. Pues bien tenemos poderosas herramientas que por si solas o combinadas nos van a solucionar este menester
whereis Con este buscamos la localización de algún binario, fuente o manual de un comando (el famoso man).
1 whereis bash Para buscar los ficheros fuente
1 whereis -s bash Para buscar los ficheros man]]></description>
</item><item>
    <title>[Vim] Búsquedas  y Reemplazo</title>
    <link>/2021/10/vim-b%C3%BAsquedas-y-reemplazo/</link>
    <pubDate>Sun, 24 Oct 2021 00:00:00 &#43;0000</pubDate>
    <author>Autor</author>
    <guid>/2021/10/vim-b%C3%BAsquedas-y-reemplazo/</guid>
    <description><![CDATA[Esta operación tan básica no puede faltar en cualquier editor, y en Vim (realmente uso Neovim) me resulta muy fácil hacerla.
Forma 1 Normalmente lo que me suele pasar es que mientras estoy escribiendo o programando, me encuentro con la palabra que quiero sustituir y directamente hacer el cambio.
Para esto, estando en el modo Normal y con el cursor encima de la palabra
Pulsamos la tecla * Escribimos ciw (change inner word) y seguidamente la palabra que queramos Pulsamos Esc Con la tecla n nos movemos a la siguiente ocurrencia y para repetir lo anterior pulsamos .]]></description>
</item><item>
    <title>[Linux] Teclado Keychron y teclas multimedia</title>
    <link>/2021/09/linux-teclado-keychron-y-teclas-multimedia/</link>
    <pubDate>Tue, 07 Sep 2021 00:00:00 &#43;0000</pubDate>
    <author>Autor</author>
    <guid>/2021/09/linux-teclado-keychron-y-teclas-multimedia/</guid>
    <description><![CDATA[Hace tiempo que llevo escuchando las bondades de los teclados mecánicos de la marca Keychron, y como necesitaba uno adquirí el modelo K3.
En la parte trasera hay dos botones, con los que podemos elegir si estamos usando cable o bluetooh, mac o windows, pero uso GNU/Linux por lo que las teclas multimedia no funcionan de forma correcta.
Los teclados Keychron en Linux usan el driver hid_apple, el cual por defecto usa las teclas F como las multimedia y necesitamos pulsar Fn + tecla para usar el F1 y sus consecutivas.]]></description>
</item><item>
    <title>[Vim] Eliminar líneas siguiendo un patrón</title>
    <link>/2021/05/vim-eliminar-l%C3%ADneas-siguiendo-un-patr%C3%B3n/</link>
    <pubDate>Sat, 29 May 2021 00:00:00 &#43;0000</pubDate>
    <author>Autor</author>
    <guid>/2021/05/vim-eliminar-l%C3%ADneas-siguiendo-un-patr%C3%B3n/</guid>
    <description><![CDATA[Ya sabemos que Vim es una herramienta con mucha potencia (y con una curva de aprendizaje bastante pronunciada) y a la vez liviana, incluso cuando cargamos plugins. Es por esto mismo por lo que lo uso para hacer limpieza de grandes archivos, y en esta ocasión necesitaba eliminar las líneas de un fichero si las mismas contiene un patrón.
Tenemos varias formas de hacerlo, una de ellas es buscar en todo el documento la palabra o patrón y directamente eliminar las líneas]]></description>
</item><item>
    <title>[Python] Crear entornos virtuales en Python 3</title>
    <link>/2021/04/python-crear-entornos-virtuales-en-python-3/</link>
    <pubDate>Sat, 10 Apr 2021 00:00:00 &#43;0000</pubDate>
    <author>Autor</author>
    <guid>/2021/04/python-crear-entornos-virtuales-en-python-3/</guid>
    <description><![CDATA[Una de las formas más seguras y eficientes de desarrollar proyectos en Python es usando entornos virtuales. Podemos hacer todo tipo de perrerías y si no va bien simplemente borramos una carpeta y volvemos a empezar.
Aunque existen varios métodos para tener entornos virtuales, aquí solo vamos a hacerlo de la forma más sencilla posible.
Sabiendo que estamos usando Python 3 (verifica la versión por defecto conpython --version y si no es la 3, has de usar python3 --version) y estamos en la carpeta de nuestro proyecto, ejecutamos]]></description>
</item><item>
    <title>[Linux] Autocompletado insensible en Bash</title>
    <link>/2021/03/linux-autocompletado-insensible-en-bash/</link>
    <pubDate>Mon, 29 Mar 2021 00:00:00 &#43;0000</pubDate>
    <author>Autor</author>
    <guid>/2021/03/linux-autocompletado-insensible-en-bash/</guid>
    <description><![CDATA[Aunque el título suene engañoso y a Bash le demos este horrible adjetivo que tienen algunas personas, el caso al que me refiero con insensible es que no distinga entre mayúsculas y minúsculas.
Cuando uso el comando cd para moverme entre directorios (aunque cada día uso más ranger, me resultaba ciertamente molesto estar pulsando la tecla shift cada vez que me encontraba con una carpeta o archivo con la primera letra en mayúsculas.]]></description>
</item><item>
    <title>[Python] Regresión Lineal</title>
    <link>/2021/02/python-regresi%C3%B3n-lineal/</link>
    <pubDate>Mon, 08 Feb 2021 00:00:00 &#43;0000</pubDate>
    <author>Autor</author>
    <guid>/2021/02/python-regresi%C3%B3n-lineal/</guid>
    <description><![CDATA[Sigo en mi ruta por ir pasando tareas que hacía en Matlab, y una de las habituales que podemos encontrarnos es una regresión lineal o una no lineal. Mejor no entro en el debate del porqué no se usa Python + Numpy + otras librerías en el ámbito académico, de modo que me limito a describir como poder hacer estas regresiones con Numpy.
Supongamos que tenemos los datos en dos arrays (ya sea cargando los datos de un csv, un archivo de texto o cualquier otra forma), lo único que tenemos que hacer es especificar el grado del polinomio con el que queremos hacer el ajuste.]]></description>
</item><item>
    <title>[Linux] Comprimir y partir archivos</title>
    <link>/2020/12/linux-comprimir-y-partir-archivos/</link>
    <pubDate>Wed, 02 Dec 2020 00:00:00 &#43;0000</pubDate>
    <author>Autor</author>
    <guid>/2020/12/linux-comprimir-y-partir-archivos/</guid>
    <description><![CDATA[Hasta no hace mucho era común encontrarse por las redes archivos comprimidos en varias partes, de este modo carpetas, imagenes, etc. de varios gigabytes se podían compartir de forma más fácil. Como si fuera cosa del pasado, recientemente he tenido varias situaciones de diversa índole en las que he tenido que recurrir a esta solución. Para que no caiga en el olvido, comparto como he hecho esta operación.
El «algoritmo» sería: primero comprimir los archivos con tar y luego partirlos con split.]]></description>
</item><item>
    <title>[Python] Resolver ecuaciones y sistemas de ecuaciones</title>
    <link>/2020/11/python-resolver-ecuaciones-y-sistemas-de-ecuaciones/</link>
    <pubDate>Mon, 09 Nov 2020 00:00:00 &#43;0000</pubDate>
    <author>Autor</author>
    <guid>/2020/11/python-resolver-ecuaciones-y-sistemas-de-ecuaciones/</guid>
    <description><![CDATA[En ingeniería (y en el ámbito científico en general) es de sobra conocido Matlab para resolver ecuaciones, hacer modelado, simulaciones, etc. Pero ya sea por el precio, forma de trabajar, filosofía de software o cualquier otra razón no queramos usarlo y busquemos un reemplazo. Podemos optar por usar GNU Octave, pero yo me inclino por Python + Jupyter. Así pues, vamos a ver como podemos resolver ecuaciones, ecuaciones cuadráticas, sistemas de ecuaciones lineales y una pequeña introducción al cálculo simbólico.]]></description>
</item></channel>
</rss>
